import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import styled from "styled-components";
import { useEffect } from "react";
import { Gradient } from "../components/Gradient";
import { sanityClient, urlfor } from "../sanity";
import { Collection } from "../typings";
import Link from "next/link";

interface Props {
  collections: Collection[];
}

const GradientCanvas = styled.canvas`
  width: 100%;
  height: 100vh;
  --gradient-color-1: #1b7b14;
  --gradient-color-2: #ce1c69;
  --gradient-color-3: #000000;
  --gradient-color-4: #212673;
  z-index: -1;
  position: absolute;
  top: 0;
  left: 0;
`;

const Container = styled.div`
  height: 100vh;
  overflow-y: scroll;
  width: 100%;
  background: rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(50px);

  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 15px;
  }

  .fit-content {
    height: fit-content;
  }

  .animate-bottom {
    position: relative;
    top: 48px;
    transition: all 0.2s ease-in;

    :hover {
      top: 32px;
    }
  }

  .animate {
    position: relative;
    top: 0;

    transition: all 0.2s ease-in;

    :hover {
      top: -16px;
    }
  }

  .gradient-text {
    background: linear-gradient(
      90deg,
      hsl(240deg 95% 92%) 0%,
      hsl(273deg 100% 91%) 12%,
      hsl(302deg 100% 89%) 22%,
      hsl(317deg 100% 87%) 30%,
      hsl(336deg 100% 85%) 38%,
      hsl(360deg 100% 85%) 45%,
      hsl(21deg 100% 77%) 54%,
      hsl(35deg 100% 70%) 64%,
      hsl(44deg 100% 62%) 78%,
      hsl(55deg 86% 51%) 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
`;

const Home: NextPage<Props> = ({ collections }: Props) => {
  useEffect(() => {
    const gradient = new Gradient();

    // @ts-ignore
    gradient.initGradient(".gradient-canvas");
  }, []);

  return (
    <div>
      <Head>
        <title>NFT Drop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <GradientCanvas data-transition-in className={"gradient-canvas"} />
      <Container className={"grid grid-cols-10 p-32 pr-16"}>
        <h1
          className={
            "text-white leading-normal text-8xl col-span-4 font-extrabold"
          }
        >
          The
          <span className={"gradient-text"}> NFT</span> Market
        </h1>

        <div className={"col-span-6 flex px-16 justify-between space-x-16"}>
          {/*  card */}
          {collections.map((collection, index) => {
            const animate =
              (index + 1) % 2 === 0 ? "animate-bottom" : "animate";

            return (
              <Link key={index} href={`/nft/${collection.slug.current}`}>
                <div
                  className={
                    "text-white w-72 px-10 py-8 space-y-4 text-center bg-white/10 backdrop-blur-md fit-content rounded-xl cursor-pointer pb-4 " +
                    animate
                  }
                >
                  <img
                    className={"h-72 object-cover w-56 rounded-xl"}
                    src={urlfor(collection.mainImage).url()}
                    alt=""
                  />
                  <h2 className={"font-bold text-xl"}>{collection.title}</h2>
                  <p className={"text-sm text-gray-300"}>
                    {collection.description}{" "}
                  </p>
                </div>
              </Link>
            );
          })}
        </div>
      </Container>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const query = `
       *[_type =="collection"]{
  _id,
  title,
  address,
  description,
  mainImage {
    asset,
  },
  previewImage {
    asset,
  },
  slug {
    current,
  },
  creator -> {
    _id,
    name,
    address,
    slug {
      current
    },
  },
}
  `;

  const collections = await sanityClient.fetch(query);

  return {
    props: {
      collections: collections,
    },
  };
};
